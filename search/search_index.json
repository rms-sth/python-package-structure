{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"my_module User Guide Info This user guide is purely an illustrative example that shows off several features of Material for MkDocs and included Markdown extensions. Installation First, install Poetry : Linux/macOS Windows curl -sSL https://install.python-poetry.org | python3 - ( Invoke-WebRequest -Uri https :// install . python-poetry . org -UseBasicParsing ). Content | py - Then install the my_module package and its dependencies: poetry install Activate the virtual environment created automatically by Poetry: poetry shell Quick Start To use my_module within your project, import the factorial function and execute it like: from my_module.libs.tasks import create_tasks assert create_tasks () is True","title":"`my_module` User Guide"},{"location":"index.html#my_module-user-guide","text":"Info This user guide is purely an illustrative example that shows off several features of Material for MkDocs and included Markdown extensions.","title":"my_module User Guide"},{"location":"index.html#installation","text":"First, install Poetry : Linux/macOS Windows curl -sSL https://install.python-poetry.org | python3 - ( Invoke-WebRequest -Uri https :// install . python-poetry . org -UseBasicParsing ). Content | py - Then install the my_module package and its dependencies: poetry install Activate the virtual environment created automatically by Poetry: poetry shell","title":"Installation"},{"location":"index.html#quick-start","text":"To use my_module within your project, import the factorial function and execute it like: from my_module.libs.tasks import create_tasks assert create_tasks () is True","title":"Quick Start"},{"location":"reference/SUMMARY.html","text":"my_module libs rules rules tasks tasks main","title":"SUMMARY"},{"location":"reference/my_module/__init__.html","text":"Initial documentation of My Module Smart Debt my_module PIP Package. __version__ = '0.0.1' module-attribute","title":"  init  "},{"location":"reference/my_module/__init__.html#my_module.__version__","text":"","title":"__version__"},{"location":"reference/my_module/main.html","text":"Package interface. This is the main package interface. main () -> None Source code in my_module/main.py 7 8 def main () -> None : print ( \"Executing main function....\" )","title":"main"},{"location":"reference/my_module/main.html#my_module.main.main","text":"Source code in my_module/main.py 7 8 def main () -> None : print ( \"Executing main function....\" )","title":"main()"},{"location":"reference/my_module/libs/__init__.html","text":"General Libraries for the project.","title":"  init  "},{"location":"reference/my_module/libs/rules/__init__.html","text":"","title":"  init  "},{"location":"reference/my_module/libs/rules/rules.html","text":"sample module that performs sample operations. Contains SampleClass SampleClass Documentation of the SampleClass. Source code in my_module/libs/rules/rules.py 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 class SampleClass : \"\"\"Documentation of the SampleClass.\"\"\" def __init__ ( self ) -> None : \"\"\"Initializes samples class.\"\"\" return @staticmethod def true () -> bool : \"\"\"Return True my friend.\"\"\" return True @classmethod def false ( cls ) -> bool : \"\"\" Doc strings should not start with Returns... Nonetheless, returns False \"\"\" return False __init__ () -> None Initializes samples class. Source code in my_module/libs/rules/rules.py 23 24 25 def __init__ ( self ) -> None : \"\"\"Initializes samples class.\"\"\" return false () -> bool classmethod Doc strings should not start with Returns... Nonetheless, returns False Source code in my_module/libs/rules/rules.py 32 33 34 35 36 37 38 @classmethod def false ( cls ) -> bool : \"\"\" Doc strings should not start with Returns... Nonetheless, returns False \"\"\" return False true () -> bool staticmethod Return True my friend. Source code in my_module/libs/rules/rules.py 27 28 29 30 @staticmethod def true () -> bool : \"\"\"Return True my friend.\"\"\" return True create_rules ( some_parameter : str | None = None ) -> bool compute and parse rules for validation Parameters: Name Type Description Default some_parameter str | None parameter for function. Defaults to None. None Returns: Name Type Description bool bool parsed rules. Source code in my_module/libs/rules/rules.py 8 9 10 11 12 13 14 15 16 17 def create_rules ( some_parameter : str | None = None ) -> bool : # noqa: D103 \"\"\"compute and parse rules for validation Args: some_parameter (str | None, optional): parameter for function. Defaults to None. Returns: bool: parsed rules. \"\"\" return True","title":"rules"},{"location":"reference/my_module/libs/rules/rules.html#my_module.libs.rules.rules.SampleClass","text":"Documentation of the SampleClass. Source code in my_module/libs/rules/rules.py 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 class SampleClass : \"\"\"Documentation of the SampleClass.\"\"\" def __init__ ( self ) -> None : \"\"\"Initializes samples class.\"\"\" return @staticmethod def true () -> bool : \"\"\"Return True my friend.\"\"\" return True @classmethod def false ( cls ) -> bool : \"\"\" Doc strings should not start with Returns... Nonetheless, returns False \"\"\" return False","title":"SampleClass"},{"location":"reference/my_module/libs/rules/rules.html#my_module.libs.rules.rules.SampleClass.__init__","text":"Initializes samples class. Source code in my_module/libs/rules/rules.py 23 24 25 def __init__ ( self ) -> None : \"\"\"Initializes samples class.\"\"\" return","title":"__init__()"},{"location":"reference/my_module/libs/rules/rules.html#my_module.libs.rules.rules.SampleClass.false","text":"Doc strings should not start with Returns... Nonetheless, returns False Source code in my_module/libs/rules/rules.py 32 33 34 35 36 37 38 @classmethod def false ( cls ) -> bool : \"\"\" Doc strings should not start with Returns... Nonetheless, returns False \"\"\" return False","title":"false()"},{"location":"reference/my_module/libs/rules/rules.html#my_module.libs.rules.rules.SampleClass.true","text":"Return True my friend. Source code in my_module/libs/rules/rules.py 27 28 29 30 @staticmethod def true () -> bool : \"\"\"Return True my friend.\"\"\" return True","title":"true()"},{"location":"reference/my_module/libs/rules/rules.html#my_module.libs.rules.rules.create_rules","text":"compute and parse rules for validation Parameters: Name Type Description Default some_parameter str | None parameter for function. Defaults to None. None Returns: Name Type Description bool bool parsed rules. Source code in my_module/libs/rules/rules.py 8 9 10 11 12 13 14 15 16 17 def create_rules ( some_parameter : str | None = None ) -> bool : # noqa: D103 \"\"\"compute and parse rules for validation Args: some_parameter (str | None, optional): parameter for function. Defaults to None. Returns: bool: parsed rules. \"\"\" return True","title":"create_rules()"},{"location":"reference/my_module/libs/tasks/__init__.html","text":"","title":"  init  "},{"location":"reference/my_module/libs/tasks/tasks.html","text":"create_tasks ( some_parameter : str | None = None ) -> bool Source code in my_module/libs/tasks/tasks.py 1 2 def create_tasks ( some_parameter : str | None = None ) -> bool : # noqa: D103 return True","title":"tasks"},{"location":"reference/my_module/libs/tasks/tasks.html#my_module.libs.tasks.tasks.create_tasks","text":"Source code in my_module/libs/tasks/tasks.py 1 2 def create_tasks ( some_parameter : str | None = None ) -> bool : # noqa: D103 return True","title":"create_tasks()"}]}